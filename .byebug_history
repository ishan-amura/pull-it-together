exit
end
e
cnt
c
base.to_s == 'Task'
base == 'Task'
base.id
base.class.name
base.class
disp base
c
n
Project.count
Project
n
disp @project
c
n
s
n
@project.creator.projects
@project.creator.projects.
@project.creator.projects.include?(@project)
@project.creator.projects.to_a
@project.creator
n
s
project_params
disp @project
exit
u
p
x
e
g
dd
c
n
s
c
n
cont
cnt
con
cnt
c
d
c
s
c
self
Project.all.to_a
Project.all.entries
Project.all.entires
Project.all
Project.find(self.taskable.id)
self.taskable.id
self.taskable
c
d
n
s
n
s
n
exit
users_hash.map{|e| e['f_id'].to_i }
users_hash
ids
ids.map! {|e| e.to_i } 
ids
ids.map {|e| e.to_i } 
ids.map {|e| e.to_int } 
ids
User.where(id: { '$in' => [1,2] }).all.entries
User.where(id: { '$in' => [1,2] }).all
User.where(id: { '$in' => [1,2] }).empty?
User.where(id: { '$in' => [1,2] }).empty_and_chainable?
User.where(id: { '$in' => ids }).empty_and_chainable?
User.where(id: { '$in' => ids }).empty?
User.where(id: { '$in' => ids }).class.name
User.where(id: { '$in' => ids }).read
User.where(id: { '$in' => ids })
User.where(id: { '$in' => ids }).all.documents
User.where(id: { '$in' => ids }).all.to_a
User.where(id: { '$in' => ids }).all.entries
User.where(id: { '$in' => ids }).all
User.where(id: { '$in' => ids }).all.to_a
User.where(id: { '$in' => ids })
ids
res.documents
res.document
res.to_s.to_a
res.to_s
res.as_json
res
n
s
disp users_hash
disp ids
disp res
exit
@user.valid?
@user
@user.save
@user.password = "admin123"
@user.save!
@user.name = "chinmay"
@user.email = "chinmay@amuratech.com"
@user = User.new
@user = FactoryGirl.create(:user)
response.should redirect_to user_projects_path(@user, @project)
get :show, user_id: @user, id:@project
@project = FactoryGirl.create(:project)
sign_in @user
@user = FactoryGirl.create(:user)
@user = FactoryGirl.create!(:user)
sign_in @user
@user = FactoryGirl.attributes_for(:user)
sign_in
sign_on
c
N
C
sign_in
c
sign_in @user
@user = FactoryGirl.attributes_for(:user)
@user
n
exit
n
@project.update(project_params)
project_params
pproject_params
projepop
n
c
continue
@project.tasks
@project
continue
disp @project.tasks
n
disp @project
continue
nn
n
disp @comments
disp @project.posts
disp @posts
n
disp @project
c
n
disp store
c
n
disp store
c
n
disp store
n
s
n
c
n
d
s
n
s
n
disp store
c
n
s
disp data
s
n
stty echo
s
n
continue
n
s
n
disp data
disp project_parmas
continue
